name: Deploy to AWS

env:
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.0


      - name: Terraform Init
        run: cd Infrastructure && terraform init 

      - name: Terraform Apply
        run: cd Infrastructure && terraform apply -auto-approve -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -i ${{ secrets.PRIVATE_KEY }} ec2-user@34.245.182.58 'bash -s' << 'EOF'
            cd /path/on/ec2
            cd TestResultsHub/src
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            gunicorn -w 4 -b 0.0.0.0:5000 test-results-hub:app
          EOF
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          TERRAFORM_CLI_PATH: /home/runner/work/_temp/4894ef84-79ed-490f-84d0-7b7669dc01c9
          SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK }}
          SSH_AGENT_PID: ${{ env.SSH_AGENT_PID }}



      - name: Terraform Destroy (Optional)
        if: ${{ github.event_name == 'pull_request' }}
        run: terraform destroy -auto-approve -input=false
        env:
          AWS_ACCESS_KEY_ID=: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
